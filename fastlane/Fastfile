# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Run unit tests"
  lane :unit_test do
    gradle(task: "testDebugUnitTest")
  end

  desc "Run instrumentation tests"
  lane :instrumentation_test do
    gradle(task: "connectedDebugAndroidTest")
  end

  desc "Submit a new Debug Build"
  lane :debug do
    gradle(task: "clean assembleDebug")
  end

  desc "Submit a new Release Build"
  lane :release do
    gradle(
      task: "clean assembleRelease",
      properties: {
        "android.injected.signing.store.file" => ENV["KEYSTORE_PATH"],
        "android.injected.signing.store.password" => ENV["STORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["KEY_PASSWORD"],
      }
    )
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(
      task: "clean bundleRelease",
      properties: {
        "android.injected.signing.store.file" => ENV["KEYSTORE_PATH"],
        "android.injected.signing.store.password" => ENV["STORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["KEY_PASSWORD"],
      }
    )
    upload_to_play_store(
      track: 'internal',
      json_key: ENV['PLAY_STORE_CONFIG_JSON'],
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true,
      skip_upload_changelogs: true
    )
  end

  desc "Run code analysis"
  lane :analyze do
    gradle(task: "detekt")
    gradle(task: "lint")
    gradle(task: "checkstyle")
    gradle(task: "pmd")
  end

  desc "Generate coverage reports"
  lane :coverage do
    gradle(task: "jacocoTestReport")
  end

  desc "Increment version code"
  lane :increment_version do
    gradle(task: "incrementVersionCode")
  end

  desc "Build and deploy to Firebase App Distribution"
  lane :beta do
    gradle(
      task: "clean assembleRelease",
      properties: {
        "android.injected.signing.store.file" => ENV["KEYSTORE_PATH"],
        "android.injected.signing.store.password" => ENV["STORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["KEY_PASSWORD"],
      }
    )
    firebase_app_distribution(
      app: ENV["FIREBASE_APP_ID"],
      groups: "testers",
      release_notes: "Automated beta deployment via fastlane"
    )
  end

  desc "Run all quality checks"
  lane :quality_check do
    test
    analyze
    coverage
  end

  desc "Prepare for release"
  lane :prepare_release do
    ensure_git_branch(branch: 'release/*')
    ensure_git_status_clean
    increment_version
    quality_check
    release
  end
end
